name: cd
run-name: ${{ github.actor }} is deploying
on:
  push:
    branches:
      - main
  workflow_dispatch:
permissions:
  id-token: write
  contents: read
env:
  AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN }}
  ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        array:
          [
            number:
              {
                dockerBuildContext: "api/point-api",
                ecrRepository: "mela/point-api",
              },
            number:
              {
                dockerBuildContext: "api/ranking-api",
                ecrRepository: "mela/ranking-api",
              },
            number:
              {
                dockerBuildContext: "web/mela-next",
                ecrRepository: "mela/mela-next",
              },
            number:
              {
                dockerBuildContext: "web/server",
                ecrRepository: "mela/webserver",
              },
          ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Diff check for each directory
        id: diff-count
        run: git diff HEAD~ --name-only --relative=${{matrix.array.number.dockerBuildContext}} | wc -l
      - name: Configure AWS Credentials
        if: ${{ steps.diff-count.outputs.diff-count != 0 }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: us-east-1
      - name: Set up Docker Buildx
        if: ${{ steps.diff-count.outputs.diff-count != 0 }}
        uses: docker/setup-buildx-action@v3
      - name: Login to ECR
        if: ${{ steps.diff-count.outputs.diff-count != 0 }}
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: build and push
        if: ${{ steps.diff-count.outputs.diff-count != 0 }}
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.array.number.dockerBuildContext }}
          platforms: linux/amd64
          push: true
          cache-from: type=registry,ref=${{ env.ECR_REGISTRY }}/${{ matrix.array.number.ecrRepository }}:latest
          cache-to: type=inline,ref=${{ env.ECR_REGISTRY }}/${{ matrix.array.number.ecrRepository }}:latest
          provenance: false
          tags: ${{ env.ECR_REGISTRY }}/${{ matrix.array.number.ecrRepository }}:latest
